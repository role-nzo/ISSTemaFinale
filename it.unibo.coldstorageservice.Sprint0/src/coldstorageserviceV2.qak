System coldstorageservice


Request  doplan   : doplan( PATH, OWNER, STEPTIME )
Reply doplandone  : doplandone( ARG )
Reply doplanfailed  : doplanfailed( PLANDONE, PLANTODO )


Request moverobot    :  moverobot(TARGETX, TARGETY)
Reply moverobotdone  :  moverobotok(ARG)
Reply moverobotfailed:  moverobotfailed(ARG)


Request storefood : storefood(FW)

Reply chargetaken : chargetaken(ARG)


//Ottenimento del ticket
Request  ticketrequest  : ticketrequest( FW )
Reply ticketrequestaccepted  : ticketrequestaccepted( ARG )
Reply ticketrequestrefused  : ticketrequestrefused( ARG )






Context ctxbasicrobot ip [host="127.0.0.1" port=8020]
Context ctxcoldstorageservice ip [host="localhost" port=8022]
Context ctxrasp ip[host="IPRASP" port=1111]
Context ctxfridgetruck ip [host="127.0.0.1" port=8023] 

ExternalQActor basicrobot context ctxbasicrobot



QActor alarmdevice context ctxrasp{
	State s0 initial{
		println("alarmdevice starts") color blue
		
		
    	
	}
}

QActor warningdevice context ctxrasp{
	State s0 initial{
		println("warningdevice starts") color blue
		
		
    	
	}
}

QActor transporttrolley context ctxcoldstorageservice{
	
	
	State s0 initial{
		println("transporttrolley starts") color blue
		//Acquisizione del basicrobot
    	
	}
	
	
}

QActor serviceaccessgui context ctxfridgetruck{ 
	State s0 initial{
		println("Serviceaccessgui starts") color red
		
		request coldstorageservice -m ticketrequest:ticketrequest(arg)
		request coldstorageservice -m storefood:storefood(fw)
		
		
	}
}


QActor coldstorageservice context ctxcoldstorageservice{ 
	State s0 initial{
		
		
		println("coldstorageservice starts") color green
		
		
	}
}

QActor servicestatusgui context ctxcoldstorageservice{ 

	State s0 initial{
		println("servicestatusgui starts") color red
		
		
	}
}

QActor fridgetruck context ctxfridgetruck{ 
	State s0 initial{
		println("fridgetruck starts") color red
	}
}




